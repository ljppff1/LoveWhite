package com.ljppff.fragment;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import android.content.Context;import android.graphics.Bitmap;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.text.style.ForegroundColorSpan;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.BaseExpandableListAdapter;import android.widget.ExpandableListView;import android.widget.ExpandableListView.OnGroupClickListener;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ProgressBar;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.ljppff.LoveWhite.R;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;public class Fragment62 extends Fragment{	protected ImageLoader imageLoader = ImageLoader.getInstance();	private View parentView;	private com.ljppff.view.MyGridView mLv1;	private ProgressBar mPb1;	private String Latitude;	private String Longitude;	private DisplayImageOptions options;	private ForegroundColorSpan redSpan;	private TextView mTv1;	private int sign = -1;// 控制列表的展开    private List<String> listw1 =new ArrayList<String>();	private ExpandableListView expandableGridView;	private ArrayList<Map<String, Object>> list;	private ExpandableGridAdapter adapter;	public static Fragment62 newInstance(int position) {		Fragment62 fragment = new Fragment62();        Bundle bundle = new Bundle();        bundle.putInt("position", position);        fragment.setArguments(bundle);        return fragment;    }	@Override	@Nullable	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment62, container, false);		expandableGridView = (ExpandableListView)parentView.findViewById(R.id.list);		expandableGridView.setOnGroupClickListener(new OnGroupClickListener() {			@Override			public boolean onGroupClick(ExpandableListView parent, View v,					int groupPosition, long id) {				if (sign == -1) {					// 展开被选的group					expandableGridView.expandGroup(groupPosition);					// 设置被选中的group置于顶端					expandableGridView.setSelectedGroup(groupPosition);					sign = groupPosition;				} else if (sign == groupPosition) {					expandableGridView.collapseGroup(sign);					sign = -1;				} else {					expandableGridView.collapseGroup(sign);					// 展开被选的group					expandableGridView.expandGroup(groupPosition);					// 设置被选中的group置于顶端					expandableGridView.setSelectedGroup(groupPosition);					sign = groupPosition;				}				return true;			}		});		initData();		mTv1 =(TextView)parentView.findViewById(R.id.mTv1);		mTv1.setText("您已发送了2个等待回应交友请求，只要对方接受邀请，即可成为朋友，聊天室随即开启");						list = new ArrayList<Map<String, Object>>();		for (int i = 0; i <listw1.size(); i++) {			Map<String, Object> map = new HashMap<String, Object>();			map.put("txt","");			list.add(map);		}		adapter = new ExpandableGridAdapter(getActivity(), list);		expandableGridView.setAdapter(adapter);				return parentView;					}	private void initData() {		listw1.add("2015-11-11");		listw1.add("2015-11-13");		listw1.add("2015-11-17");		listw1.add("2015-11-01");		listw1.add("2015-1-17");		listw1.add("2014-03-17");		listw1.add("2013-08-17");		listw1.add("2013-08-17");		listw1.add("2013-03-17");		listw1.add("2013-02-17");		listw1.add("2013-01-27");		listw1.add("2013-01-14");			}				private void initImageLoaderOptions() {		options = new DisplayImageOptions.Builder()				.showImageForEmptyUri(R.drawable.aaa)				.cacheInMemory()				.cacheOnDisc().displayer(new FadeInBitmapDisplayer(2000))				.bitmapConfig(Bitmap.Config.RGB_565).build();	}	public class ExpandableGridAdapter extends BaseExpandableListAdapter implements	OnItemClickListener {private String[][] child_text_array;private Context context;private com.ljppff.view.MyGridView gridview;private List<Map<String, Object>> list;List<String> child_array;public ExpandableGridAdapter(Context context,		List<Map<String, Object>> list) {	this.context = context;	this.list = list;}/** * 获取一级标签总数 */@Overridepublic int getGroupCount() {	return list.size();}/** * 获取一级标签下二级标签的总数 */@Overridepublic int getChildrenCount(int groupPosition) {	// 这里返回1是为了让ExpandableListView只显示一个ChildView，否则在展开	// ExpandableListView时会显示和ChildCount数量相同的GridView	return 1;}/** * 获取一级标签内容 */@Overridepublic Object getGroup(int groupPosition) {	return list.get(1);}/** * 获取一级标签下二级标签的内容 */@Overridepublic Object getChild(int groupPosition, int childPosition) {	return child_text_array[groupPosition][childPosition];}/** * 获取一级标签的ID */@Overridepublic long getGroupId(int groupPosition) {	return groupPosition;}/** * 获取二级标签的ID */@Overridepublic long getChildId(int groupPosition, int childPosition) {	return childPosition;}/** * 指定位置相应的组视图 */@Overridepublic boolean hasStableIds() {	return true;}/** * 对一级标签进行设置 */@Overridepublic View getGroupView(int groupPosition, boolean isExpanded,		View convertView, ViewGroup parent) {	convertView = (LinearLayout) LinearLayout.inflate(context,			R.layout.item_gridview_group_layout, null);	TextView group_title = (TextView) convertView			.findViewById(R.id.group_title);	ImageView mIvll1 =(ImageView)convertView.findViewById(R.id.mIvll1);	if (isExpanded) {		mIvll1.setImageResource(R.drawable.group_down);	} else {		mIvll1.setImageResource(R.drawable.group_up);	}	group_title.setText(listw1.get(groupPosition));	return convertView;}/** * 对一级标签下的二级标签进行设置 */@Overridepublic View getChildView(int groupPosition, int childPosition,		boolean isLastChild, View convertView, ViewGroup parent) {	convertView = (RelativeLayout) RelativeLayout.inflate(context,			R.layout.item_grid_child_layout, null);	gridview = (com.ljppff.view.MyGridView) convertView.findViewById(R.id.gridview);	//int size = child_text_array[groupPosition].length;/*	child_array = new ArrayList<String>();	for (int i = 0; i < size; i++) {		child_array.add(child_text_array[groupPosition][i]);	}*/	gridview.setAdapter(new Myadapter());	gridview.setOnItemClickListener(this);	return convertView;}/** * 当选择子节点的时候，调用该方法 */@Overridepublic boolean isChildSelectable(int groupPosition, int childPosition) {	return true;}@Overridepublic void onItemClick(AdapterView<?> parent, View view, int position,		long id) {/*	Toast.makeText(context, "当前选中的是:" + child_array.get(position),			Toast.LENGTH_SHORT).show();*/}}			class Holder{		TextView mTv3,mTv4,mTv5,mTv6,mTv7,mTv1,mTv2;		ImageView mIv2,mIv3,mIv1;	}	class  Myadapter extends   BaseAdapter{		@Override		public View getView(int position, View convertView, ViewGroup parent) {			        						Holder holder = null;			if(convertView==null){				convertView = LayoutInflater.from(getActivity())						.inflate(R.layout.item_61, null);				holder = new Holder();								convertView.setTag(holder);			}else{				holder =(Holder)convertView.getTag();			}			return convertView;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return 14;		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}	}}