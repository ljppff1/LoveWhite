package com.ljppff.fragment;import com.ljppff.LoveWhite.GestureListener;import com.ljppff.LoveWhite.R;import android.app.Fragment;import android.content.Context;import android.graphics.drawable.AnimationDrawable;import android.os.AsyncTask;import android.os.Bundle;import android.os.Handler;import android.support.annotation.Nullable;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.view.ViewTreeObserver.OnPreDrawListener;import android.view.animation.Animation;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.Toast;public class Fragment1 extends android.support.v4.app.Fragment{	private View parentView;	private RelativeLayout mRl2;	private ImageView mIv1;	private ImageView mIv2;	private AnimationDrawable anim2;	private AnimationDrawable anim1;	private ImageView mIv3;   private Handler handler =new Handler(){	   public void handleMessage(android.os.Message msg) {		   switch (msg.what) {		case 1:        	mIv3.setVisibility(View.VISIBLE);        	mIv2.setVisibility(View.VISIBLE);			break;		default:			break;		}	   };   };private LinearLayout mLL1;	@Override	@Nullable	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment1, container, false);		mRl2 =(RelativeLayout)parentView.findViewById(R.id.mRl2);		mRl2.setLongClickable(true);  		mRl2.setOnTouchListener(new MyGestureListener(getActivity()));  		mIv1 =(ImageView)parentView.findViewById(R.id.mIv1);		mIv3 =(ImageView)parentView.findViewById(R.id.mIv3);				mIv2 =(ImageView)parentView.findViewById(R.id.mIv2);		mLL1 =(LinearLayout)parentView.findViewById(R.id.mLL1);		mIv2.setOnClickListener(listener);		mIv2.setBackgroundResource(R.anim.anim2);		anim2 =(AnimationDrawable)mIv2.getBackground();		anim2.setOneShot(false);		anim2.start();				mIv1.setBackgroundResource(R.anim.anim1);		anim1 =(AnimationDrawable)mIv1.getBackground();		anim1.setOneShot(true);		return parentView;	}	OnClickListener listener =new OnClickListener() {				@Override		public void onClick(View v) {			switch (v.getId()) {			case R.id.mIv2:				mIv2.setVisibility(View.GONE);				mLL1.setVisibility(View.VISIBLE);				break;			default:				break;			}		}	};	  private class MyGestureListener extends GestureListener {  	        public MyGestureListener(Context context) {  	            super(context);  	        }  	  	        @Override  	        public boolean left() {  	        		        		    		mLL1.setVisibility(View.GONE);	    		mIv1.setBackgroundResource(R.anim.anim1);	    		anim1 =(AnimationDrawable)mIv1.getBackground();				mIv3.setVisibility(View.GONE);	        	mIv2.setVisibility(View.GONE);	    		new Thread(new Runnable() {										@Override					public void run() {						try {							Thread.sleep(400);						} catch (InterruptedException e) {							// TODO Auto-generated catch block							e.printStackTrace();						}			        	handler.sendEmptyMessage(1);					}				}).start();				anim1.stop();				anim1.start();	    		    			    			    			    	/*	anim1.start();	        	mIv3.setVisibility(View.GONE);	        	mIv2.setVisibility(View.GONE);*/	        		            return super.left();  	        }  	  	        @Override  	        public boolean right() {  		           Toast.makeText(getActivity(), R.string.matchingSwipeLeftToRightHints, 0).show();	            return super.right();  	        }  	    }  }